@model BusTicketSystem.Pages.ViewComponents.SearchTripPanelViewModel

<form method="get" class="search-form-container" asp-page="/Home/Schedule/Index">
    <div class="search-form-group">
        <label for="departure">Nơi đi</label>
        <div class="input-with-icon">
            <i class="bi bi-record-circle-fill"></i>
            <input list="departure-options" id="departure" name="Departure" class="destination-input" placeholder="Nhập điểm đi" value="@Model.Departure" required>
            <button type="button" class="clear-button" onclick="clearInput('departure')">
                <i class="bi bi-x"></i>
            </button>
        </div>
        <datalist id="departure-options">
            @foreach(var location in Model.DepartureLocations)
            {
                <option value="@location.Trim()">@location.Trim()</option>
            }
        </datalist>
    </div>
    <button type="button" class="swap-button" onclick="swapLocations()">
        <i class="bi bi-arrow-left-right"></i>
    </button>
    <div class="search-form-group">
        <label for="destination">Nơi đến</label>
        <div class="input-with-icon">
            <i class="bi bi-geo-alt-fill"></i>
            <input list="destination-options" id="destination" name="Destination" class="destination-input" placeholder="Nhập điểm đến" value="@Model.Destination" required>
            <button type="button" class="clear-button" onclick="clearInput('destination')">
                <i class="bi bi-x"></i>
            </button>
        </div>
        <datalist id="destination-options">
            @foreach(var location in Model.DestinationLocations)
            {
                <option value="@location.Trim()">@location.Trim()</option>
            }
        </datalist>
    </div>
    <div class="search-form-group">
        <label for="departure-date">Ngày khởi hành</label>
        <input type="date" id="departure-date" name="date" class="date-input" value="@Model.DepartureDate?.ToString("yyyy-MM-dd")" required>
    </div>
    <div class="search-form-group" id="return-date-group">
        <label for="return-date">Ngày về (khứ hồi)</label>
        <input type="date" id="return-date" name="returnDateStr" class="date-input" value="@Model.ReturnDate?.ToString("yyyy-MM-dd")">
    </div>
    <div class="search-form-group">
        <label for="ticket-quantity">Số lượng vé</label>
        <select id="ticket-quantity" name="Quantity" class="ticket-select">
            @for(int i = 1; i <= 5; i++)
            {
                <option value="@i" selected="@(Model.Quantity == i ? "selected" : null)">@i vé</option>
            }
        </select>
    </div>
    <input type="hidden" name="TripType" id="hidden-trip-type" value="@(Model.TripType ?? "one-way")">
    <button type="submit" class="submit-button">Tìm chuyến</button>
</form>

<script>
    function swapLocations() {
        const departure = document.getElementById('departure');
        const destination = document.getElementById('destination');
        const temp = departure.value;
        departure.value = destination.value;
        destination.value = temp;
        updateClearButtons();
    }

    function clearInput(inputId) {
        document.getElementById(inputId).value = '';
        updateClearButtons();
    }

    function updateClearButtons() {
        ['departure', 'destination'].forEach(id => {
            const input = document.getElementById(id);
            const formGroup = input.closest('.search-form-group');
            if (input.value) {
                formGroup.classList.add('has-content');
            } else {
                formGroup.classList.remove('has-content');
            }
        });
    }

    function updateTripTypeBasedOnReturnDate() {
        const returnDateInput = document.getElementById('return-date');
        const hiddenTripType = document.getElementById('hidden-trip-type');
        if (returnDateInput.value) {
            hiddenTripType.value = 'round-trip';
            returnDateInput.setAttribute('required', 'required');
        } else {
            hiddenTripType.value = 'one-way';
            returnDateInput.removeAttribute('required');
        }
    }

    document.getElementById('departure').addEventListener('input', updateClearButtons);
    document.getElementById('destination').addEventListener('input', updateClearButtons);
    document.getElementById('return-date').addEventListener('change', updateTripTypeBasedOnReturnDate);

    updateTripTypeBasedOnReturnDate();
    updateClearButtons();
</script>