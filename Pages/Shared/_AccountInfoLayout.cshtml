@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    var username = HttpContextAccessor.HttpContext?.Session.GetString("Username") ?? "Khách";
    var currentPath = HttpContextAccessor.HttpContext?.Request.Path.Value?.ToLower() ?? "";
    var avatarPath = HttpContextAccessor.HttpContext?.Session.GetString("AvatarPath") ?? "/images/logo2.png";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] | Tài khoản</title>
    <link rel="stylesheet" href="~/css/_adminlayout.css"> @* Bạn cần tạo file này dựa trên _adminlayout.css *@
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4Q6Gf2aSP4eDXB8Miphtr37CMZZQ5oXLH2yaXMJ2w8e2ZtHTl7GptT4jmndRuHDT" crossorigin="anonymous">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="icon" href="/images/logo5.png" type="image/png"/>
</head>
<body>
    <div class="sidebar">
        <a href="/Index" class="logo" style="text-decoration: none;">
            <img class="logo_dashboard" src="/images/LogoAndSlogan2.png" alt="Trang chủ">
        </a>
        <ul class="side-menu">
            <li class="@(currentPath.StartsWith("/forcustomer/myaccount") ? "active" : "")"><a href="/ForCustomer/MyAccount/Index"><i class='bx bx-user-circle'></i>Thông tin cá nhân</a></li>
            <li class="@(currentPath.StartsWith("/forcustomer/myorders") ? "active" : "")"><a href="/ForCustomer/MyOrders/Index"><i class='bx bx-receipt'></i>Đơn hàng của tôi</a></li>
            <li class="@(currentPath.StartsWith("/forcustomer/myreviews") ? "active" : "")"><a href="#"><i class='bx bx-comment-edit'></i>Nhận xét chuyến đi</a></li>
        </ul>
        <ul class="side-menu">
            <li>
                <a href="/Account/Logout/Index" class="logout"  style='text-decoration: none;'>
                    <i class='bx bx-log-out-circle'></i>
                    Đăng xuất
                </a>
            </li>
        </ul>
    </div>
    <div class="content">
        <nav>
            <i class='bx bx-menu'></i>
            <form method="get" asp-page="/ForCustomer/SearchHandler/Index">
                <div class="form-input">
                    
                </div>
            </form>
            <input type="checkbox" id="theme-toggle" hidden>
            <label for="theme-toggle" class="theme-toggle" title="Dark/Light Mode"></label>
            <a href="/ForCustomer/Notifications/Index" class="notif">
                @* <i class='bx bx-bell'></i> *@
                <span>@await Component.InvokeAsync("UnreadNotificationCount")</span>
            </a>
            <a href="/ForAdmin/ProfileAdmin" class="profile" title="Thông tin cá nhân">
                
            </a>
        </nav>
        <main>
            @RenderBody()
        </main>
    </div>
    <script>
        const sideLinks = document.querySelectorAll('.sidebar .side-menu li a:not(.logout)');
        sideLinks.forEach(item => {
            const li = item.parentElement;
            item.addEventListener('click', () => {
                sideLinks.forEach(i => {
                    i.parentElement.classList.remove('active');
                })
                // Active class is set by server-side logic based on currentPath
            });
        });

        const menuBar = document.querySelector('.content nav .bx.bx-menu');
        const sideBar = document.querySelector('.sidebar');

        menuBar.addEventListener('click', () => {
            sideBar.classList.toggle('close');
        });

        window.addEventListener('resize', () => {
            if (window.innerWidth < 768) {
                sideBar.classList.add('close');
            } else {
                sideBar.classList.remove('close');
            }
        });

        const toggler=document.getElementById('theme-toggle');
        const body=document.body;

        function applyTheme(theme){
            if(theme==='dark'){
                body.classList.add('dark');
                toggler.checked=true;
            }else{
                body.classList.remove('dark');
                toggler.checked=false;
            }
        }
        const savedTheme=localStorage.getItem('theme');
        if(savedTheme){
            applyTheme(savedTheme);
        }
        toggler.addEventListener('change',function(){
            if(this.checked){
                body.classList.add('dark');
                localStorage.setItem('theme','dark');
            }else{
                body.classList.remove('dark');
                localStorage.setItem('theme','light');
            }
        })
    </script>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js" integrity="sha384-j1CDi7MgGQ12Z7Qab0qlWQ/Qqz24Gc6BM0thvEMVjHnfYGF0rmFCozFSxQBxwHKO" crossorigin="anonymous"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
