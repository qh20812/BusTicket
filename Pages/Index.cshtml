@page
@model BusTicketSystem.Pages.IndexModel
@using BusTicketSystem.Models
@using BusTicketSystem.Extensions
@{
    ViewData["Title"] = "Trang Chủ";
    Layout = "_Layout";
}

<div class="home-container">
    <!-- Chuyến xe phổ biến -->
    @if (Model.PopularTrips.Any())
    {
        <div class="separator mt-5">
            <h2>Chuyến Xe Phổ Biến</h2>
            <a asp-page="/Home/Schedule/Index">Xem tất cả <i class="bx bx-chevron-right"></i></a>
        </div>
        <div id="popularTripsCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                @{
                    var tripIndex = 0;
                    var cardColors = new[] { "#FF5733", "#33FF57", "#3357FF", "#FF33F0", "#F0FF33", "#33F0FF" };
                    var cardImages = new[] {
                        "https://picsum.photos/300/200?random=1",
                        "https://picsum.photos/300/200?random=2",
                        "https://picsum.photos/300/200?random=3",
                        "https://picsum.photos/300/200?random=4",
                        "https://picsum.photos/300/200?random=5",
                        "https://picsum.photos/300/200?random=6"
                    };
                }
                @foreach (var trip in Model.PopularTrips)
                {
                    var currentColor = cardColors[tripIndex % cardColors.Length];
                    var currentImage = cardImages[tripIndex % cardImages.Length];
                    <div class="carousel-item @(tripIndex == 0 ? "active" : "")">
                        <div class="popular-trip-card" style="background-color: @currentColor;">
                            <div class="card-background-visual" style="background-image: url('@currentImage');">
                                <div class="card-overlay"></div>
                            </div>
                            <div class="card-content-wrapper">
                                <div class="top">
                                    <div class="info">
                                        <a asp-page="/Home/Schedule/Details" asp-route-id="@trip.TripId">@trip.Route.Departure - @trip.Route.Destination</a>
                                        <p>Khởi hành: @trip.DepartureTime.ToString("dd/MM/yyyy HH:mm")</p>
                                    </div>
                                </div>
                                <div class="bottom">
                                    <div class="price">
                                        <h5>Giá vé: @trip.Price.ToString("N0") VND</h5>
                                    </div>
                                    <a asp-page="/Home/Schedule/Details" asp-route-id="@trip.TripId" class="btn btn-primary btn-sm">Xem chi tiết</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    tripIndex++;
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#popularTripsCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#popularTripsCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    }

    <!-- Tuyến đường phổ biến -->
    @if (Model.Popular.Any())
    {
        <div class="separator mt-5">
            <h2>Tuyến Đường Phổ Biến</h2>
            <a asp-page="/Home/Schedule/Index">Xem tất cả <i class="bx bx-chevron-right"></i></a>
        </div>
        <div id="popularRoutesCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                @{
                    var routeIndex = 0;
                    var routeCardColors = new[] { "#FF5733", "#33FF57", "#3357FF", "#FF33F0", "#F0FF33", "#33F0FF" };
                    var routeCardImages = new[] {
                        "https://picsum.photos/300/200?random=7",
                        "https://picsum.photos/300/200?random=8",
                        "https://picsum.photos/300/200?random=9",
                        "https://picsum.photos/300/200?random=10",
                        "https://picsum.photos/300/200?random=11",
                        "https://picsum.photos/300/200?random=12"
                    };
                }
                @foreach (var route in Model.Popular)
                {
                    var currentColor = routeCardColors[routeIndex % routeCardColors.Length];
                    var currentImage = routeCardImages[routeIndex % routeCardImages.Length];
                    <div class="carousel-item @(routeIndex == 0 ? "active" : "")">
                        <div class="popular-trip-card" style="background-color: @currentColor;">
                            <div class="card-background-visual" style="background-image: url('@currentImage');">
                                <div class="card-overlay"></div>
                            </div>
                            <div class="card-content-wrapper">
                                <div class="top">
                                    <div class="info">
                                        <a asp-page="/Home/Schedule/Index" asp-route-departure="@route.Departure" asp-route-destination="@route.Destination">@route.Departure - @route.Destination</a>
                                        <p>Khoảng cách: @(route.Distance.HasValue ? route.Distance.Value.ToString("N0") : "N/A") km</p>
                                    </div>
                                </div>
                                <div class="bottom">
                                    <div class="price">
                                        <h5>Thời gian: @(route.EstimatedDuration.ToString(@"hh\:mm") ?? "N/A")</h5>
                                    </div>
                                    <a asp-page="/Home/Schedule/Index" asp-route-departure="@route.Departure" asp-route-destination="@route.Destination" class="btn btn-primary btn-sm">Tìm chuyến</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    routeIndex++;
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#popularRoutesCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#popularRoutesCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    }

    <!-- Tin tức nổi bật -->
    @if (Model.RecentPosts.Any())
    {
        <div class="separator mt-5">
            <h2>Tin Tức Nổi Bật</h2>
            <a asp-page="/Home/Posts/Index">Xem tất cả <i class="bx bx-chevron-right"></i></a>
        </div>
        <div class="carousel-container">
            <div id="recentPostsCarousel" class="popular-trips-carousel">
                @foreach (var post in Model.RecentPosts)
                {
                    <div class="post-card">
                        @if (!string.IsNullOrEmpty(post.ImageUrl))
                        {
                            <img class="post-card-image" src="@post.ImageUrl" alt="@post.Title">
                        }
                        else
                        {
                            <div class="post-card-placeholder-image">No Image Available</div>
                        }
                        <div class="post-card-content">
                            <div class="post-card-category">
                                <span class="badge">@post.Category.GetDisplayName()</span>
                            </div>
                            <a asp-page="/Home/Posts/Details" asp-route-id="@post.PostId" class="post-card-link">
                                <h3 class="post-card-title">@post.Title</h3>
                            </a>
                            <div class="post-card-summary">
                                @(post.Content.Length > 100 ? post.Content.Substring(0, 100) + "..." : post.Content)
                            </div>
                            <div class="post-card-footer">
                                <span class="post-card-date">@post.CreatedAt.ToString("dd/MM/yyyy")</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="custom-scrollbar"><div class="custom-scrollbar-thumb"></div></div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const carouselContainer = document.querySelector('#recentPostsCarousel').parentElement;
            if (carouselContainer) {
                const slider = carouselContainer.querySelector('.popular-trips-carousel');
                const scrollbar = carouselContainer.querySelector('.custom-scrollbar');
                const scrollbarThumb = carouselContainer.querySelector('.custom-scrollbar-thumb');

                let isDown = false;
                let startX;
                let scrollLeft;

                let isThumbDragging = false;
                let thumbStartX;
                let thumbStartLeft;

                slider.addEventListener('mousedown', (e) => {
                    isDown = true;
                    slider.classList.add('active');
                    startX = e.pageX - slider.offsetLeft;
                    scrollLeft = slider.scrollLeft;
                });
                slider.addEventListener('mouseleave', () => {
                    isDown = false;
                    slider.classList.remove('active');
                });
                slider.addEventListener('mouseup', () => {
                    isDown = false;
                    slider.classList.remove('active');
                });
                slider.addEventListener('mousemove', (e) => {
                    if (!isDown) return;
                    e.preventDefault();
                    const x = e.pageX - slider.offsetLeft;
                    const walk = (x - startX);
                    slider.scrollLeft = scrollLeft - walk;
                });

                scrollbarThumb.addEventListener('mousedown', (e) => {
                    e.preventDefault();
                    isThumbDragging = true;
                    thumbStartX = e.pageX;
                    thumbStartLeft = scrollbarThumb.offsetLeft;
                    scrollbarThumb.classList.add('active-drag');
                });

                document.addEventListener('mouseup', () => {
                    isThumbDragging = false;
                    scrollbarThumb.classList.remove('active-drag');
                });

                document.addEventListener('mousemove', (e) => {
                    if (!isThumbDragging) return;
                    e.preventDefault();

                    const deltaX = e.pageX - thumbStartX;
                    let newThumbLeft = thumbStartLeft + deltaX;

                    const scrollbarWidth = scrollbar.clientWidth;
                    const thumbWidth = scrollbarThumb.offsetWidth;
                    const thumbTrackLength = scrollbarWidth - thumbWidth;

                    newThumbLeft = Math.max(0, Math.min(newThumbLeft, thumbTrackLength));
                    scrollbarThumb.style.left = `${newThumbLeft}px`;

                    const scrollRatio = thumbTrackLength > 0 ? newThumbLeft / thumbTrackLength : 0;
                    const sliderMaxScroll = slider.scrollWidth - slider.clientWidth;
                    slider.scrollLeft = scrollRatio * sliderMaxScroll;
                });

                function updateScrollbar() {
                    if (!scrollbar || !scrollbarThumb) return;

                    const scrollWidth = slider.scrollWidth;
                    const clientWidth = slider.clientWidth;
                    const scrollbarWidth = scrollbar.clientWidth;

                    scrollbar.style.display = scrollWidth > clientWidth ? 'block' : 'none';

                    if (scrollWidth <= clientWidth) return;

                    const thumbWidth = (clientWidth / scrollWidth) * scrollbarWidth;
                    scrollbarThumb.style.width = `${thumbWidth}px`;

                    const maxScrollLeft = scrollWidth - clientWidth;
                    const thumbTrackLength = scrollbarWidth - thumbWidth;
                    const scrollRatio = maxScrollLeft > 0 ? slider.scrollLeft / maxScrollLeft : 0;
                    const thumbLeft = scrollRatio * thumbTrackLength;

                    scrollbarThumb.style.left = `${thumbLeft}px`;
                }

                slider.addEventListener('scroll', updateScrollbar);
                window.addEventListener('resize', updateScrollbar);
                updateScrollbar();
            }
        });
    </script>
}