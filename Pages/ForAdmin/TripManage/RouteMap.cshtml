@page
@model BusTicketSystem.Pages.ForAdmin.TripManage.RouteMapModel
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = $"Chi tiết điểm dừng Chuyến đi ID: {Model.CurrentTrip?.TripId}";
}

<div class="header">
    <div class="left">
        <h1>@ViewData["Title"]</h1>
        <ul class="breadcrumb">
            <li><a asp-page="/ForAdmin/Dashboard/Index" style="text-decoration: none;">Tổng quan</a></li>/
            <li><a asp-page="/ForAdmin/TripManage/Index" style="text-decoration: none;">Chuyến đi</a></li>/
            <li><a href="/ForAdmin/TripManage/RouteMap" class="active" style="text-decoration: none;">Bản đồ Điểm dừng</a></li>
        </ul>
    </div>
    <div class="ms-auto">
        <a asp-page="./Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Quay lại danh sách
        </a>
    </div>
</div>

<h3>
    Lộ trình chi tiết cho chuyến: @(Model.CurrentTrip?.Route?.Departure) <i class="bi bi-arrow-right-short"></i> @(Model.CurrentTrip?.Route?.Destination)
    (Khởi hành: @Model.CurrentTrip?.DepartureTime.ToString("dd/MM/yyyy HH:mm"))
</h3>
<div id="map" style="height: 600px; border-radius: 10px;" class="mb-4"></div>
@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDcq-HEZDdXSiMsbD5o_T9GDS-iJGR9Ar0&libraries=directions"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const allPoints = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.AllMapPoints));
            let map, directionsService, directionsRenderer;

            function initMap() {
                directionsService = new google.maps.DirectionsService();
                directionsRenderer = new google.maps.DirectionsRenderer();
                map = new google.maps.Map(document.getElementById('map'), {
                    center: { lat: 10.762622, lng: 106.660172 },
                    zoom: 6
                });
                directionsRenderer.setMap(map);
            }

            initMap();

            if (allPoints.length > 0) {
                const origin = allPoints.find(p => p.pointType === 'origin');
                const destination = allPoints.find(p => p.pointType === 'destination');
                const waypoints = allPoints
                    .filter(p => p.pointType === 'stop')
                    .map(p => ({ location: { lat: p.latitude, lng: p.longitude }, stopover: true }));

                if (origin && destination) {
                    directionsService.route({
                        origin: { lat: origin.latitude, lng: origin.longitude },
                        destination: { lat: destination.latitude, lng: destination.longitude },
                        waypoints: waypoints,
                        travelMode: google.maps.TravelMode.DRIVING
                    }, (result, status) => {
                        if (status === google.maps.DirectionsStatus.OK) {
                            directionsRenderer.setDirections(result);
                            allPoints.forEach(point => {
                                const marker = new google.maps.Marker({
                                    position: { lat: point.latitude, lng: point.longitude },
                                    map: map,
                                    icon: point.pointType === 'origin' ? 'http://maps.google.com/mapfiles/ms/icons/green-dot.png' :
                                          point.pointType === 'destination' ? 'http://maps.google.com/mapfiles/ms/icons/red-dot.png' :
                                          'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
                                    title: point.stationName
                                });
                                let popupContent = `<strong>${point.stationName}</strong>`;
                                if (point.pointType === 'stop') {
                                    popupContent += ` (Thứ tự dừng: ${point.stopOrder})`;
                                    if (point.estimatedArrival) popupContent += `<br>Đến dự kiến: ${point.estimatedArrival.substring(0,5)}`;
                                    if (point.estimatedDeparture) popupContent += `<br>Đi dự kiến: ${point.estimatedDeparture.substring(0,5)}`;
                                    if (point.note) popupContent += `<br>Ghi chú: ${point.note}`;
                                }
                                marker.addListener('click', () => {
                                    new google.maps.InfoWindow({ content: popupContent }).open(map, marker);
                                });
                            });
                        } else {
                            document.getElementById('map').innerHTML = `<p class="text-center text-danger">Lỗi tải tuyến đường: ${status}</p>`;
                        }
                    });
                } else {
                    document.getElementById('map').innerHTML = '<p class="text-center text-warning">Không đủ tọa độ để hiển thị tuyến đường.</p>';
                }
            } else {
                document.getElementById('map').innerHTML = '<p class="text-center text-warning">Không có điểm nào để hiển thị trên bản đồ.</p>';
            }
        });
    </script>
}