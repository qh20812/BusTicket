@page
@model BusTicketSystem.Pages.ForAdmin.BusCompanyManage.IndexModel
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Quản lý Nhà xe";
}

<div class="header">
    <div class="left">
        <h1>@ViewData["Title"]</h1>
        <ul class="breadcrumb">
            <li><a asp-page="/ForAdmin/Dashboard/Index" style="text-decoration: none;">Tổng quan</a></li>
            /
            <li><a asp-page="/ForAdmin/BusCompanyManage/Index" class="active" style="text-decoration: none;">Nhà xe</a></li>
        </ul>
    </div>
    <a asp-page="./Edit" class="report" style="text-decoration: none;"> @* Nút này có thể là "Thêm mới nhà xe" *@
        <i class="bx bx-plus-circle"></i>
        <span>Thêm Nhà xe</span>
    </a>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">@TempData["SuccessMessage"]<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">@TempData["ErrorMessage"]<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>
}
@if (TempData["ActionError"] != null && !ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Lỗi:</strong> @TempData["ActionError"]
        <ul>@foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors)) {<li>@error.ErrorMessage</li>}</ul>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Khu vực tìm kiếm và filter chung -->
<div class="row mb-3">
    <div class="col-md-12">
        <div class="header" style="background-color: transparent; padding: 0; margin-bottom: 1rem; display: flex; justify-content: space-between; align-items: center;">
            <div></div>
            <div>
                <i class="bx bx-filter" id="filter-company-icon" style="cursor:pointer; font-size: 1.5rem; margin-right: 10px;" title="Sắp xếp"></i>
                <form id="filter-form-company" method="get" style="display: none;">
                    <input type="hidden" name="SortOrder" id="SortOrderCompanyInput" value="@Model.SortOrder" />
                    <input type="hidden" name="SearchTerm" value="@Model.SearchTerm" />
                </form>
                <div style="position:relative; display:inline-block;">
                    <i class="bx bx-search" id="search-company-icon" style="cursor:pointer; font-size: 1.5rem;"></i>
                    <div class="search-company-panel" style="display:none; position: absolute; top: 100%; right: 0; background-color: white; border: 1px solid #ccc; padding: 10px; z-index: 100; box-shadow: 0 2px 5px rgba(0,0,0,0.1);">
                        <form method="get">
                            <input type="text" name="SearchTerm" placeholder="Tên nhà xe, email, người liên hệ..." value="@Model.SearchTerm" class="form-control mb-2" />
                            <button type="submit" class="btn btn-primary btn-sm">Tìm</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Tab Hồ sơ đăng ký chờ duyệt -->
<div class="bottom-data">
    <div class="orders">
        <div class="header">
            <i class='bi bi-building-add bx'></i>
            <h3>Hồ sơ đăng ký chờ duyệt (@Model.PendingCompanies.Count)</h3>
        </div>
        <table>
            <thead>
                <tr>
                    <th >STT</th>
                    <th>Tên Nhà xe</th>
                    <th>Email</th>
                    <th>Người liên hệ</th>
                    <th>Ngày ĐK</th>
                    <th>Trạng thái</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.PendingCompanies.Any())
                {
                    var stt=1;
                    @foreach (var company in Model.PendingCompanies)
                    {
                        
                        <tr>
                            <td class="truncate" title="@(stt++)">@(stt++)</td>
                            <td class="truncate" title="@company.CompanyName">@company.CompanyName</td>
                            <td class="truncate" title="@company.Email">@(company.Email ?? "N/A")</td>
                            <td class="truncate" title="@(company.ContactPersonName ?? "N/A")">@(company.ContactPersonName ?? "N/A")</td>
                            <td class="truncate" title="@company.CreatedAt.ToString("dd/MM/yyyy")">@company.CreatedAt.ToString("dd/MM/yyyy")</td>
                            <td class="truncate-status" title="@company.StatusDisplayName"><span class="status @company.Status.ToString().ToLower()">@company.StatusDisplayName</span></td>
                            <td>
                                @if (company.Status == BusTicketSystem.Models.BusCompanyStatus.PendingApproval)
                                {
                                    <form method="post" asp-page-handler="Review" asp-route-id="@company.CompanyId" style="display:inline;">
                                        <button type="submit" class="btn btn-sm btn-info">Xem xét</button>
                                    </form>
                                }
                                @if (company.Status == BusTicketSystem.Models.BusCompanyStatus.UnderReview)
                                {
                                    <form method="post" asp-page-handler="Approve" asp-route-id="@company.CompanyId" style="display:inline;">
                                        <button type="submit" class="btn btn-sm btn-success">Phê duyệt</button>
                                    </form>
                                    <button type="button" class="btn btn-sm btn-warning btn-company-action-modal"
                                            data-bs-toggle="modal" data-bs-target="#companyActionModal"
                                            data-company-id="@company.CompanyId" data-company-name="@company.CompanyName" data-action-type="Reject" data-modal-title="Từ chối hồ sơ nhà xe">
                                        Từ chối
                                    </button>
                                }
                                <a asp-page="./Edit" asp-route-id="@company.CompanyId" class="btn btn-sm btn-secondary" title="Xem chi tiết/Sửa (nếu được phép)"><i class="bi bi-eye"></i></a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td></td>
                        <td colspan="6" class="text-center">Không có hồ sơ đăng ký nào đang chờ.</td>
                        <td></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Tab Danh sách nhà xe chính thức -->
<div class="bottom-data mt-4">
    <div class="orders">
        <div class="header">
            <i class='bi bi-buildings-fill bx'></i>
            <h3>Nhà xe chính thức (@Model.OfficialCompanies.Count)</h3>
        </div>
        <table>
            <thead>
                <tr>
                    <th class="truncate">STT</th>
                    <th class="truncate">Tên Nhà xe</th>
                    <th class="truncate">Email</th>
                    <th class="truncate">SĐT</th>
                    <th class="truncate">Ngày duyệt</th>
                    <th class="truncate">Trạng thái</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.OfficialCompanies.Any())
                {
                    var stt=1;
                    @foreach (var company in Model.OfficialCompanies)
                    {
                        <tr>
                            <td class="truncate">@(stt++)</td>
                            <td class="truncate">@company.CompanyName</td>
                            <td class="truncate">@(company.Email ?? "N/A")</td>
                            <td class="truncate">@(company.Phone ?? "N/A")</td>
                            <td class="truncate">@(company.ApprovedAt?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                            <td class="truncate">
                                <span class="status @company.Status.ToString().ToLower()">@company.StatusDisplayName</span>
                                @if(company.Status == BusTicketSystem.Models.BusCompanyStatus.Rejected && !string.IsNullOrEmpty(company.RejectionReason))
                                { <i class="bx bx-info-circle" title="Lý do từ chối: @company.RejectionReason" style="cursor:help;"></i> }
                                @if(company.Status == BusTicketSystem.Models.BusCompanyStatus.Terminated && !string.IsNullOrEmpty(company.TerminationReason))
                                { <i class="bx bx-info-circle" title="Lý do hủy: @company.TerminationReason" style="cursor:help;"></i> }
                            </td>
                            <td>
                                <a asp-page="./Edit" asp-route-id="@company.CompanyId" class="btn btn-sm btn-primary @(company.Status == BusTicketSystem.Models.BusCompanyStatus.Rejected || company.Status == BusTicketSystem.Models.BusCompanyStatus.Terminated ? "disabled" : "")">Sửa</a>
                                @if (company.Status == BusTicketSystem.Models.BusCompanyStatus.Active)
                                {
                                    <button type="button" class="btn btn-sm btn-warning btn-company-action-modal"
                                            data-bs-toggle="modal" data-bs-target="#companyActionModal"
                                            data-company-id="@company.CompanyId" data-company-name="@company.CompanyName" data-action-type="Deactivate" data-modal-title="Vô hiệu hóa Nhà xe">
                                        Vô hiệu hóa
                                    </button>
                                }
                                @if (company.Status == BusTicketSystem.Models.BusCompanyStatus.Inactive)
                                {
                                    <button type="button" class="btn btn-sm btn-success btn-company-action-modal"
                                            data-bs-toggle="modal" data-bs-target="#companyActionModal"
                                            data-company-id="@company.CompanyId" data-company-name="@company.CompanyName" data-action-type="Activate" data-modal-title="Kích hoạt Nhà xe">
                                        Kích hoạt
                                    </button>
                                }
                                @if (company.Status == BusTicketSystem.Models.BusCompanyStatus.Active || company.Status == BusTicketSystem.Models.BusCompanyStatus.Inactive)
                                {
                                     <button type="button" class="btn btn-sm btn-danger btn-company-action-modal"
                                            data-bs-toggle="modal" data-bs-target="#companyActionModal"
                                            data-company-id="@company.CompanyId" data-company-name="@company.CompanyName" data-action-type="Terminate" data-modal-title="Hủy hợp tác Nhà xe">
                                        Hủy hợp tác
                                    </button>
                                }
                                @if (company.Status == BusTicketSystem.Models.BusCompanyStatus.Terminated)
                                {
                                    <button type="button" class="btn btn-sm btn-info btn-company-action-modal"
                                            data-bs-toggle="modal" data-bs-target="#companyActionModal"
                                            data-company-id="@company.CompanyId" data-company-name="@company.CompanyName" data-action-type="Repartner" data-modal-title="Hợp tác lại với Nhà xe">
                                        Hợp tác lại
                                    </button>
                                }

                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td></td>
                        <td colspan="6" class="text-center">Không có nhà xe chính thức nào.</td>
                        <td></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal Chung cho các hành động Nhà xe -->
<div class="modal fade" id="companyActionModal" tabindex="-1" aria-labelledby="companyActionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="ProcessAction" id="companyActionForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="companyActionModalLabel">Xác nhận hành động</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Bạn có chắc chắn muốn <strong id="actionNameModal"></strong> nhà xe <strong id="companyNameToActionModal"></strong>?</p>
                    <input type="hidden" asp-for="CompanyActionInput.CompanyIdToAction" id="companyIdToActionInputModal" />
                    <input type="hidden" asp-for="CompanyActionInput.ActionType" id="actionTypeInputModal" />
                    <div class="mb-3" id="reasonDivModal" style="display:none;">
                        <label asp-for="CompanyActionInput.Reason" class="form-label fw-bold">Lý do:</label>
                        <textarea asp-for="CompanyActionInput.Reason" class="form-control" rows="3" placeholder="Nhập lý do (bắt buộc nếu Từ chối/Hủy hợp tác)"></textarea>
                        <span asp-validation-for="CompanyActionInput.Reason" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-danger" id="confirmCompanyActionButton">Xác nhận</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        // Search and Filter logic (tương tự DriverManage)
        const searchCompanyIcon = document.getElementById('search-company-icon');
        const searchCompanyPanel = document.querySelector('.search-company-panel');
        if (searchCompanyIcon && searchCompanyPanel) {
            searchCompanyIcon.onclick = function (event) { event.stopPropagation(); searchCompanyPanel.style.display = (searchCompanyPanel.style.display === 'none' ? 'block' : 'none'); };
            document.addEventListener('click', function (e) { if (searchCompanyPanel.style.display === 'block' && !searchCompanyPanel.contains(e.target) && e.target !== searchCompanyIcon) { searchCompanyPanel.style.display = 'none'; } });
        }

        const filterCompanyIcon = document.getElementById('filter-company-icon');
        const filterCompanyForm = document.getElementById('filter-form-company');
        const sortOrderCompanyInput = document.getElementById('SortOrderCompanyInput');
        if (filterCompanyIcon && filterCompanyForm && sortOrderCompanyInput) {
            const sortStatesCompany = ["", "name_asc", "name_desc", "date_asc"]; // Thêm các giá trị sort
            let currentSortValueCompany = sortOrderCompanyInput.value || "";
            let sortIndexCompany = sortStatesCompany.indexOf(currentSortValueCompany);
            if (sortIndexCompany === -1) sortIndexCompany = 0;
            filterCompanyIcon.onclick = function () {
                sortIndexCompany = (sortIndexCompany + 1) % sortStatesCompany.length;
                sortOrderCompanyInput.value = sortStatesCompany[sortIndexCompany];
                filterCompanyForm.submit();
            };
        }

        // Modal Logic
        var companyModalElement = document.getElementById('companyActionModal');
        if (companyModalElement) {
            var companyActionModal = new bootstrap.Modal(companyModalElement);
            companyModalElement.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var companyId = button.getAttribute('data-company-id');
                var companyName = button.getAttribute('data-company-name');
                var actionType = button.getAttribute('data-action-type');
                var modalTitle = button.getAttribute('data-modal-title');

                companyModalElement.querySelector('#companyActionModalLabel').textContent = modalTitle;
                companyModalElement.querySelector('#companyNameToActionModal').textContent = companyName;
                companyModalElement.querySelector('#companyIdToActionInputModal').value = companyId;
                companyModalElement.querySelector('#actionTypeInputModal').value = actionType;
                
                var actionText = "";
                var reasonDiv = companyModalElement.querySelector('#reasonDivModal');
                var reasonTextarea = companyModalElement.querySelector('[name="CompanyActionInput.Reason"]');
                var confirmButton = companyModalElement.querySelector('#confirmCompanyActionButton');
                confirmButton.className = 'btn'; // Reset

                if (actionType === "Reject") { actionText = "từ chối"; reasonDiv.style.display = 'block'; reasonTextarea.required = true; confirmButton.classList.add('btn-warning'); }
                else if (actionType === "Terminate") { actionText = "hủy hợp tác"; reasonDiv.style.display = 'block'; reasonTextarea.required = true; confirmButton.classList.add('btn-danger'); }
                else if (actionType === "Deactivate") { actionText = "vô hiệu hóa"; reasonDiv.style.display = 'none'; reasonTextarea.required = false; confirmButton.classList.add('btn-warning'); }
                else if (actionType === "Activate") { actionText = "kích hoạt"; reasonDiv.style.display = 'none'; reasonTextarea.required = false; confirmButton.classList.add('btn-success'); }
                else if (actionType === "Repartner") { actionText = "hợp tác lại"; reasonDiv.style.display = 'none'; reasonTextarea.required = false; confirmButton.classList.add('btn-info'); }
                
                companyModalElement.querySelector('#actionNameModal').textContent = actionText;
                confirmButton.textContent = 'Xác nhận ' + actionText.charAt(0).toUpperCase() + actionText.slice(1);

                document.getElementById('companyActionForm').reset();
                companyModalElement.querySelectorAll('.text-danger').forEach(span => span.textContent = '');
            });

            // Logic hiển thị lại modal nếu có lỗi validation từ server
            var companyIdOnError = '@(TempData["ShowActionModalOnError"] as string)';
            var actionTypeOnError = '@(TempData["ActionTypeOnError"] as string)';
            if (companyIdOnError && actionTypeOnError) {
                var buttonForError = document.querySelector(`.btn-company-action-modal[data-company-id="${companyIdOnError}"][data-action-type="${actionTypeOnError}"]`);
                if(buttonForError) {
                    // Kích hoạt sự kiện 'show.bs.modal' một cách giả lập hoặc trực tiếp gọi hàm thiết lập modal
                     var mockEvent = { relatedTarget: buttonForError };
                     // Cần gọi hàm xử lý sự kiện show.bs.modal ở đây với mockEvent
                     // Hoặc đơn giản là thiết lập lại các giá trị cho modal và hiển thị nó
                     companyModalElement.querySelector('#companyActionModalLabel').textContent = buttonForError.getAttribute('data-modal-title');
                     companyModalElement.querySelector('#companyNameToActionModal').textContent = buttonForError.getAttribute('data-company-name');
                     companyModalElement.querySelector('#companyIdToActionInputModal').value = companyIdOnError;
                     companyModalElement.querySelector('#actionTypeInputModal').value = actionTypeOnError;
                     // ... (phần còn lại của logic thiết lập modal như trong event listener)
                }
                companyActionModal.show();
            }
        }
        // Tự động ẩn thông báo TempData
        document.querySelectorAll('.alert-dismissible.fade.show[role="alert"]').forEach(function(alert) {
            setTimeout(function() {
                if (bootstrap && bootstrap.Alert) { bootstrap.Alert.getInstance(alert)?.close(); }
                else { alert.style.display = 'none'; }
            }, 7000);
        });
    });
    </script>
}